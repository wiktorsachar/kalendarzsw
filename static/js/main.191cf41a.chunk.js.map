{"version":3,"sources":["fonts/TREBUCBD.ttf","services/displayUnicode.js","services/getDayName.js","components/DayBox/DayBox.js","services/dateService.js","services/holidays.js","services/shifts.js","services/monthNames.js","components/DateSelector/components/MonthSelector.js","components/DateSelector/components/ShiftSelector.js","components/DateSelector/components/YearSelector.js","components/DateSelector/DateSelector.js","components/Calendar/Calendar.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","displayUnicode","duty","pictogram","getDayName","dateArray","Date","getDay","DayBox","props","dayName","date","holidayCheck","holiday","digitNumberCheck","length","className","today","isMonthAndYearMatch","id","hideCondition","role","aria-label","DateService","getFullYear","getMonth","getDate","firstDate","secondDate","startDate","endDate","startYear","endYear","years","push","days","valueOf","currentDate","this","isDatesMatch","makeDateArray","addDaysToDate","element","datesToCheck","fixed","isContains","forEach","e","day","BigHolidays","year","f","Math","floor","G","C","H","I","L","month","easter","getEaster","secondEaster","corpusChristi","constantDays","getSecondEaster","getCorpusChristi","Shifts","dayDifference","getRefDate","round","abs","positive","night","getDayDifference","counter","monthNumber","monthArray","i","shiftNumber","getShiftNumber","dateIndex","shiftMonth","holidays","Holidays","getBigHolidays","monthWithHolidays","containsDateCheck","createMonth","firstDay","getFirstShiftDay","firstDateShowed","dutySwitch","addHolidaysToShiftMonth","dualShiftNumber","firstShift","createShiftMonth","secondShift","dualShiftMonth","monthNames","MonthSelector","name","value","onChange","handler","target","map","key","ShiftSelector","state","popupStatus","changePopupStatus","setState","Fragment","system","handleSystemChange","type","handleDateChange","onClick","React","Component","YearSelector","DateSelector","yearSelector","monthSelector","Calendar","now","shift","handleMonthSelector","parseInt","handleYearSelector","handleShiftChange","dateString","dutyMonth","createBlankMonth","createDualShiftMonth","Footer","href","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.191cf41a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TREBUCBD.e1eb63ed.ttf\";","const displayUnicode = (duty, pictogram) => {\n  switch (duty) {\n    case \"night\":\n      return pictogram ? \"🌙\" : \"noc\";\n    case \"day\":\n      return pictogram ? \"☀\" : 'dzień';\n    default:\n      return pictogram ? \"-\" : \"wolne\";\n  }\n};\n\nexport default displayUnicode;","const getDayName = (dateArray) => {\n  const date = new Date(...dateArray).getDay();\n  switch (date) {\n    case 0:\n      return \"ND\";\n    case 1:\n      return \"PN\";\n    case 2:\n      return \"WT\";\n    case 3:\n      return \"ŚR\";\n    case 4:\n      return \"CZW\";\n    case 5:\n      return \"PT\";\n    case 6:\n      return \"SO\";\n    default:\n      return \"error\";\n  }\n};\n\nexport default getDayName;","import React from \"react\";\nimport displayUnicode from \"../../services/displayUnicode\";\nimport getDayName from \"../../services/getDayName\";\nimport \"./DayBox.css\";\n\nconst DayBox = (props) => {\n  const dayName = getDayName(props.date);\n  const holidayCheck =\n    dayName === \"ND\" || props.holiday ? \"holiday-dayname\" : \"regular-dayname\";\n  const digitNumberCheck = (props.date[2] + \"\").length === 2 && true;\n  return (\n    <div\n      className={\n        props.date[2] === props.today && props.isMonthAndYearMatch\n          ? \"day-box-today\"\n          : \"day-box\"\n      }\n      id={\n        props.duty\n          ? props.duty === \"day\"\n            ? \"duty-day\"\n            : \"duty-night\"\n          : \"blank\"\n      }\n    >\n      <div className=\"day-box-children\">\n        {digitNumberCheck ? (\n          <p className={holidayCheck}>{props.date[2]}</p>\n        ) : (\n          <p className={holidayCheck}>{props.date[2]}&#8205; &#8205; &#8205;</p>\n        )}\n        <p className={holidayCheck}>{dayName}</p>\n      </div>\n      {/*props.shift === \"blank\"*/ props.hideCondition ? (\n        <div className=\"day-time-box\">\n          <span role=\"img\" className=\"hidden\" aria-label=\"\">\n            &#127769;\n          </span>\n        </div>\n      ) : (\n        <div className=\"day-time-box\">\n          <p>{displayUnicode(props.duty)}</p>\n          {!props.duty && (\n            <span className=\"hidden\" role=\"img\" aria-label=\"\">\n              &#127769;\n            </span>\n          )}\n          <p>{displayUnicode(props.duty, true)}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DayBox;\n","class DateService {\n  static makeDateArray(date) {\n    return [date.getFullYear(), date.getMonth(), date.getDate()];\n  }\n  //konwertuje datę z formatu date na tablicę\n  static isDatesMatch(firstDate, secondDate) {\n    if (\n      firstDate[0] === secondDate[0] &&\n      firstDate[1] === secondDate[1] &&\n      firstDate[2] === secondDate[2]\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  //sprawdza, czy pierwsza data jest taka sama jak druga\n  static getYears(startDate, endDate) {\n    let startYear = startDate.getFullYear();\n    const endYear = endDate.getFullYear();\n    let years = [startYear];\n    while (startYear !== endYear) {\n      startYear++;\n      years.push(startYear);\n    }\n    return years;\n  }\n  //zwraca tablicę z latami, które obejmuje podany przedział dat w formacie date\n  static addDaysToDate(date, days) {\n    return new Date(date.valueOf() + days * 86400000);\n  }\n  //dodaje określoną liczbę dni do daty w formacie date\n  static getDates(startDate, endDate) {\n    let days = [];\n    let currentDate = startDate;\n    while (\n      !this.isDatesMatch(\n        this.makeDateArray(currentDate),\n        this.makeDateArray(endDate)\n      )\n    ) {\n      days.push(this.makeDateArray(currentDate));\n      currentDate = this.addDaysToDate(currentDate, 1);\n    }\n    if (days[days.length - 1] !== currentDate) {\n      days.push(this.makeDateArray(currentDate));\n    }\n    return days;\n  }\n  //zwraca wszystkie dni z podanego przedziału w formacie date w formie tablic\n  static checkIfContainsDates(element, datesToCheck, fixed) {\n    let isContains = false;\n    datesToCheck.forEach((e) => {\n      if (this.isDatesMatch(fixed ? e.date : e, element)) {\n        isContains = true;\n      }\n    });\n    return isContains;\n  }\n  static containsDateCheck(day, datesToCheck) {\n    let isContains = false;\n    datesToCheck.forEach((e) => {\n      if (this.isDatesMatch(day, e)) {\n        isContains = true;\n      }\n    });\n    return isContains;\n  }\n}\n\nexport default DateService;\n","/*\nstatic getEaster is from: https://gist.github.com/johndyer/0dffbdd98c2046f41180c051f378f343\n*/\n\nimport DateService from \"./dateService\";\n\nclass BigHolidays {\n  static constantDays(year) {\n    return [\n      [year, 0, 1],\n      [year, 0, 6],\n      [year, 4, 1],\n      [year, 4, 3],\n      [year, 7, 15],\n      [year, 10, 1],\n      [year, 10, 11],\n      [year, 11, 25],\n      [year, 11, 26],\n    ];\n  }\n  //zwraca dni wolne od pracy bez świąt ruchomych w formie tablic\n  static getEaster(year) {\n    const f = Math.floor,\n      G = year % 19,\n      C = f(year / 100),\n      H = (C - f(C / 4) - f((8 * C + 13) / 25) + 19 * G + 15) % 30,\n      I = H - f(H / 28) * (1 - f(29 / (H + 1)) * f((21 - G) / 11)),\n      J = (year + f(year / 4) + I + 2 - C + f(C / 4)) % 7,\n      L = I - J,\n      month = 3 + f((L + 40) / 44),\n      day = L + 28 - 31 * f(month / 4);\n    return [year, month, day];\n  }\n  //zwraca datę wielkanocy dla danego roku w formie tablicy\n  static getSecondEaster(year) {\n    const easter = new Date(this.getEaster(year)),\n      secondEaster = DateService.addDaysToDate(easter, 1);\n    return [year, secondEaster.getMonth(), secondEaster.getDate()];\n  }\n  //zwraca drugi dzień świąt wielkanocnych w formie tablicy\n  static getCorpusChristi(year) {\n    let corpusChristi = DateService.addDaysToDate(\n      new Date(this.getEaster(year)),\n      50\n    );\n    while (corpusChristi.getDay() !== 0) {\n      corpusChristi = DateService.addDaysToDate(corpusChristi, 1);\n    }\n    while (corpusChristi.getDay() !== 4) {\n      corpusChristi = DateService.addDaysToDate(corpusChristi, 1);\n    }\n    return [year, corpusChristi.getMonth(), corpusChristi.getDate()];\n  }\n  //zwraca datę bożego ciała w formie tablicy\n  static getBigHolidays(year) {\n    return [\n      ...this.constantDays(year),\n      this.getSecondEaster(year),\n      this.getCorpusChristi(year),\n    ];\n  }\n}\n\nexport default BigHolidays;\n","import DateService from \"./dateService\";\nimport Holidays from \"./holidays\";\n\nclass Shifts {\n  static getRefDate() {\n    return 1581634800000;\n  }\n  static getDayDifference(dateArray) {\n    const day = 86400000,\n      dayDifference =\n        (new Date(...dateArray).valueOf() - this.getRefDate()) / day;\n    return {\n      days: Math.round(Math.abs(dayDifference)),\n      positive: dayDifference >= 0,\n    };\n  }\n  static getShiftNumber(dateArray, night) {\n    const { days, positive } = this.getDayDifference(dateArray),\n      dayPattern = [3, 2, 1, 4, 3],\n      nightPattern = [4, 3, 2, 1, 4],\n      counter = positive ? days % 4 : 4 - (days % 4);\n    if (!night) {\n      return dayPattern[counter];\n    } else {\n      return nightPattern[counter];\n    }\n  }\n  // zwraca numer zmiany, która ma służbę podanego dnia;\n  static createMonth(monthNumber, year) {\n    let monthArray = [];\n    for (let i = 1; i < 32; i++) {\n      if (new Date(year, monthNumber, i).getMonth() === monthNumber) {\n        monthArray.push([year, monthNumber, i]);\n      } else {\n        break;\n      }\n    }\n    return monthArray;\n  }\n  //tworzy tablicę ze wszystkimi datami danego miesiąca roku w formacie [yyyy, mm, dd];\n  static getFirstShiftDay(monthArray, shiftNumber) {\n    for (let i = 0; i < monthArray.length; i++) {\n      if (this.getShiftNumber(monthArray[i], false) === shiftNumber) {\n        return { dateIndex: i, night: false };\n      }\n      if (this.getShiftNumber(monthArray[i], true) === shiftNumber) {\n        return { dateIndex: i, night: true };\n      }\n    }\n  }\n  //zwraca index pierwszego rekordu monthArray, w którym dana zmiana ma służbę;\n  static addHolidaysToShiftMonth(shiftMonth, year) {\n    const holidays = Holidays.getBigHolidays(year);\n    let monthWithHolidays = [];\n    shiftMonth.forEach((day) => {\n      if (DateService.containsDateCheck(day.date, holidays)) {\n        monthWithHolidays.push({\n          date: day.date,\n          duty: day.duty,\n          holiday: true,\n        });\n      } else {\n        monthWithHolidays.push({\n          date: day.date,\n          duty: day.duty,\n          holiday: false,\n        });\n      }\n    });\n    return monthWithHolidays;\n  }\n  static createShiftMonth(monthNumber, year, shiftNumber) {\n    const month = this.createMonth(monthNumber, year);\n    const firstDay = this.getFirstShiftDay(month, shiftNumber);\n    let shiftMonth = [];\n    let firstDateShowed = false;\n    let dutySwitch = firstDay.night; // true/false\n    let counter = 0;\n    month.forEach((date, i) => {\n      if (i === firstDay.dateIndex) {\n        firstDateShowed = true;\n      }\n      if (firstDateShowed) {\n        if (dutySwitch && counter === 0) {\n          shiftMonth.push({ date, duty: \"night\" });\n          counter++;\n          dutySwitch = false;\n        } else if (!dutySwitch && counter === 0) {\n          shiftMonth.push({ date, duty: \"day\" });\n          counter = 0;\n          dutySwitch = true;\n        } else {\n          if (counter === 1) {\n            shiftMonth.push({ date, duty: false });\n            counter++;\n          } else if (counter === 2) {\n            shiftMonth.push({ date, duty: false });\n            counter = 0;\n          }\n        }\n      } else {\n        shiftMonth.push({ date, duty: false });\n      }\n    });\n\n    return this.addHolidaysToShiftMonth(shiftMonth, year);\n  }\n  //zwraca tablicę ze wszystkimi dniami miesiąca, gdzie rekordy zawierają informację o dacie, o tym czy dana zmiana\n  //ma tego dnia służbę i jeśli tak, to czy jest to dzień czy noc;\n  //usage example: Shifts.createShiftMonth(6, 2020, 3);\n  static createDualShiftMonth(monthNumber, year, dualShiftNumber) {\n    const firstShift = this.createShiftMonth(\n      monthNumber,\n      year,\n      dualShiftNumber\n    );\n    const secondShift = this.createShiftMonth(\n      monthNumber,\n      year,\n      dualShiftNumber + 2\n    );\n    let dualShiftMonth = [];\n    for (let i = 0; i < firstShift.length; i++) {\n      dualShiftMonth.push({\n        date: firstShift[i].date,\n        duty:\n          firstShift[i].duty === \"day\" || secondShift[i].duty === \"day\"\n            ? \"day\"\n            : false,\n      });\n    }\n    return this.addHolidaysToShiftMonth(dualShiftMonth, year);\n  }\n  //to co powyżej, tylko obsługuje zmiany podwójne (dzień/wolne/dzień/wolne) - obsługiwane numery zmian to 1 i 2;\n  //usage example: Shifts.createDualShiftMonth(6, 2020, 1);\n  static createBlankMonth(monthNumber, year) {\n    let month = this.createMonth(monthNumber, year);\n    month.forEach((date, i) => {\n      month[i] = { date, duty: false };\n    });\n    return this.addHolidaysToShiftMonth(month, year);\n  }\n}\n\nexport default Shifts;\n","const monthNames = [\n  \"styczeń\",\n  \"luty\",\n  \"marzec\",\n  \"kwiecień\",\n  \"maj\",\n  \"czerwiec\",\n  \"lipiec\",\n  \"sierpień\",\n  \"wrzesień\",\n  \"październik\",\n  \"listopad\",\n  \"grudzień\",\n];\n\nexport default monthNames;\n","import React from \"react\";\nimport monthNames from \"../../../services/monthNames\";\n\nconst MonthSelector = (props) => {\n  return (\n    <div>\n      <span>Miesiąc: </span>\n      <select\n        name=\"months\"\n        value={props.month}\n        id=\"months\"\n        onChange={(e) => props.handler(e.target.value)}\n      >\n        {monthNames.map((month, i) => (\n          <option value={i} key={i}>\n            {month}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default MonthSelector;\n","import React from \"react\";\nimport \"./ShiftSelector.css\";\n\nclass ShiftSelector extends React.Component {\n  state = {\n    popupStatus: \"popuptext\",\n  };\n  changePopupStatus = () => {\n    this.state.popupStatus === \"popuptext\"\n      ? this.setState({ popupStatus: \"popuptext show\" })\n      : this.setState({ popupStatus: \"popuptext\" });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <span>System: </span>\n          <select\n            name=\"system\"\n            value={this.props.system}\n            id=\"systems\"\n            onChange={(e) => {\n              this.props.handleSystemChange(e.target.value);\n            }}\n          >\n            <option value=\"blank\">wybierz system</option>\n            <option value=\"2shift\">dwuzmianowy</option>\n            <option value=\"4shift\">czterozmianowy</option>\n          </select>\n        </div>\n        <div className=\"shift-creator\">\n          <p className=\"shift-title\">Zmiana dzienna: </p>\n          <input\n            type=\"date\"\n            value={this.props.date}\n            onChange={(e) => {\n              this.props.handleDateChange(e.target.value);\n            }}\n            id=\"shift-date\"\n          ></input>\n          <div className=\"popup\" onClick={this.changePopupStatus}>\n            �\n            <span className={this.state.popupStatus} id=\"myPopup\">\n              Wybierz dowolny dzień, w którym Twoja zmiana miała służbę dzienną.\n            </span>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ShiftSelector;\n\n//kolor napisów zmienić na niebieski-sw\n//zrobić ukrywanie popupu po kliknięciu gdziekolwiek\n","import React from \"react\";\nimport \"./YearSelector.css\";\n\nconst YearSelector = (props) => {\n  return (\n    <div className=\"year-selector\">\n      <span onClick={() => props.handler(\"-\")} className=\"pointer\">\n        ◄\n      </span>\n      <span> {props.year < 0 ? props.year * -1 + \" p.n.e\" : props.year} </span>\n      <span onClick={() => props.handler(\"+\")} className=\"pointer\">\n        ►\n      </span>\n    </div>\n  );\n};\n\nexport default YearSelector;\n","import React from \"react\";\nimport MonthSelector from \"./components/MonthSelector\";\nimport ShiftSelector from \"./components/ShiftSelector\";\nimport YearSelector from \"./components/YearSelector\";\nimport \"./DateSelector.css\";\n\nconst DateSelector = (props) => {\n  return (\n    <div>\n      <div className=\"header-nav\" id=\"year-selector\">\n        <YearSelector handler={props.yearSelector} year={props.state.year} />\n      </div>\n      <div className=\"header-nav\">\n        <MonthSelector\n          handler={props.monthSelector}\n          month={props.state.month}\n        />\n      </div>\n      <div className=\"header-nav\">\n        <ShiftSelector\n          // handleShiftChange={props.handleShiftChange}\n          handleDateChange={props.handleDateChange}\n          handleSystemChange={props.handleSystemChange}\n          // shift={props.state.shift}\n          date={props.state.date}\n          system={props.state.system}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DateSelector;\n","import React from \"react\";\nimport DayBox from \"../DayBox/DayBox\";\nimport Shifts from \"../../services/shifts\";\nimport DateSelector from \"../DateSelector/DateSelector\";\nimport DateService from \"../../services/dateService\";\nimport \"./Calendar.css\";\n\nclass Calendar extends React.Component {\n  state = {\n    month: new Date(Date.now()).getMonth(),\n    year: new Date(Date.now()).getFullYear(),\n    shift: \"blank\",\n    system: \"blank\",\n    date: \"\",\n  };\n  handleMonthSelector = (props) => {\n    this.setState({\n      month: parseInt(props),\n    });\n  };\n  handleYearSelector = (props) => {\n    switch (props) {\n      case \"+\":\n        this.setState({ year: this.state.year + 1 });\n        break;\n      case \"-\":\n        this.setState({ year: this.state.year - 1 });\n        break;\n      default:\n        break;\n    }\n  };\n  handleShiftChange = (dateString, system) => {\n    const dateArray = DateService.makeDateArray(new Date(dateString));\n    const shift = Shifts.getShiftNumber(dateArray);\n    switch (system) {\n      case \"4shift\":\n        return shift;\n      case \"2shift\":\n        if (shift === 1 || shift === 3) {\n          return 5;\n        } else if (shift === 2 || shift === 4) {\n          return 6;\n        }\n        break;\n      default:\n        return \"blank\";\n    }\n  };\n  handleSystemChange = (system) => {\n    this.setState({\n      system,\n      shift: this.handleShiftChange(this.state.date, system),\n    });\n  };\n  handleDateChange = (date) => {\n    this.setState({\n      date,\n      shift: this.handleShiftChange(date, this.state.system),\n    });\n  };\n  render() {\n    const hideCondition =\n      this.state.shift === \"blank\" ||\n      this.state.system === \"blank\" ||\n      !this.state.date;\n    const dutyMonth = hideCondition\n      ? Shifts.createBlankMonth(this.state.month, this.state.year)\n      : this.state.shift < 5\n      ? Shifts.createShiftMonth(\n          this.state.month,\n          this.state.year,\n          this.state.shift\n        )\n      : Shifts.createDualShiftMonth(\n          this.state.month,\n          this.state.year,\n          this.state.shift - 4\n        );\n    const today = new Date(Date.now()).getDate();\n    const isMonthAndYearMatch =\n      new Date(Date.now()).getMonth() === this.state.month &&\n      new Date(Date.now()).getFullYear() === this.state.year;\n    return (\n      <div>\n        <div className=\"header\">\n          <DateSelector\n            monthSelector={this.handleMonthSelector}\n            yearSelector={this.handleYearSelector}\n            handleShiftChange={this.handleShiftChange}\n            handleDateChange={this.handleDateChange}\n            handleSystemChange={this.handleSystemChange}\n            state={this.state}\n          />\n        </div>\n        <div className=\"content\">\n          {dutyMonth.map((day, i) => (\n            <DayBox\n              date={day.date}\n              duty={day.duty}\n              shift={this.state.shift}\n              holiday={day.holiday}\n              today={today}\n              isMonthAndYearMatch={isMonthAndYearMatch}\n              hideCondition={hideCondition}\n              key={i}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst url = \"https://github.com/wiktorsachar\";\n\nconst Footer = () => {\n  return (\n    <a href={url} className=\"footer\" target=\"_blank\" rel=\"noopener noreferrer\">\n      © Wiktor Sacharczuk 2020\n    </a>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Calendar from \"./components/Calendar/Calendar\";\nimport Footer from \"./components/Footer/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App-container\">\n      <div className=\"App\">\n        <div className=\"prison-service\">\n          <h1>KALENDARZ ZMIANOWY</h1>\n          <h2>SŁUŻBY WIĘZIENNEJ</h2>\n        </div>\n        <Calendar />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\"\nimport \"./fonts/TREBUCBD.ttf\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}